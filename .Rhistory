clear
clc
install.packages("tidyverse")
install.packages("jsonlite")
setwd("~/OneDrive/Data_Analytics_Bootcamp/Week_15")
setwd("~/OneDrive/Data_Analytics_Bootcamp/Week_15/Module_15/01_Demo")
setwd("~/OneDrive/Data_Analytics_Bootcamp/Week_15/Module_15/01_Demo")
num(c(1,2,3,4,5))
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
View(demo_table)
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
View(demo_table2)
demo_table[3,"Year"]
demo_table[3,3]
filter_table
filter_table <- demo_table2[demo_table2$price > 10000,]
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table2 <- fromJSON(txt='demo.json')
demo_table[3,"Year"]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
View(filter_table)
help(subset)
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
View(filter_table2)
help(smaple)
??sample
sample
help(sample)
library(tidyverse)
?tidyverse
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
help(gather)
read_csv(Vehicle_Data.xls)
read_csv(Vehicle_Data.xlsx)
cwd
path
cp
read_csv('Vehicle_Data.xlsx')
info = read_csv('Vehicle_Data.xlsx')
View(info)
View(info)
info = read_table('Vehicle_Data.xlsx',Header = "TRUE")
info = read_table('Vehicle_Data.xlsx', header = "TRUE")
info = read_table('Vehicle_Data.xlsx', header = TRUE)
info = read_table('Vehicle_Data.xlsx')
View(info)
View(info)
View(info)
View(info)
View(info)
info = read_table('Vehicle_Data.xlsx')
read_csv('Vehicle_Data.xlsx')
read_csv('Vehicle_Data.xlsx',check_names = F, StringsAsFactors = F)
cars <- read_csv('Vehicle_Data.xlsx',check_names = F, StringsAsFactors = F)
cars <- read_csv('Vehicle_Data.xlsx',check.names = F, StringsAsFactors = F)
cars <- read.table(file = "Vehicle_Data.xlsx",
sep = "\t", header=TRUE)
cars <- read.table(file = "Vehicle_Data.xlsx", header=TRUE)
library(readxl)
cars <- read.excel(file.choose())
cars <- read_excel(file.choose())
View(cars)
View(cars)
cars <- read.excel('Vehicle_Data.xlsx')
cars2 <- read_excel('Vehicle_Data.xlsx')
help(spread)
setwd("~/OneDrive/Data_Analytics_Bootcamp/Week_15/Module_15/MechaCar_Statistical_Analysis")
help(lm)
help(lm)
mpg_data <- read.csv(file='MechaCar_mpg.csv',check.names = F,stringsAsFactors = F)
View(mpg_data)
View(mpg_data)
lm(formula = vehicle_length ~ vehicle_weight ~ spoiler_angle ~ ground_clearance ~ mpg , data = mpg_data)
lm(formula = vehicle_length ~ mpg , data = mpg_data)
# Plot a scatter plot of bp vs. one year disease progression
ggplot(diabetes, aes(bp, One_Year_Disease_Progress)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
setwd("~/OneDrive/Data_Analytics_Bootcamp/Week_15/Activities/2/Activities")
# Perform linear regression
reg <- lm(One_Year_Disease_Progress ~ bp, data=diabetes)
#  Read in the diabetes.csv file.
diabetes <- read.csv(file="../06-Evr_Fits_and_Regression/Resources/diabetes.csv")
#  Read in the diabetes.csv file.
diabetes <- read.csv(file="./06-Evr_Fits_and_Regression/Resources/diabetes.csv")
View(diabetes)
View(diabetes)
mpg_data <- read.csv(file='MechaCar_mpg.csv',check.names = F,stringsAsFactors = F)
setwd("~/OneDrive/Data_Analytics_Bootcamp/Week_15/Module_15/MechaCar_Statistical_Analysis")
summary(linear_model)
library(dplyr)
mpg_data <- read.csv(file='MechaCar_mpg.csv',check.names = F,stringsAsFactors = F)
linear_model <- lm(formula = mpg ~ vehicle_length + vehicle_weight + spoiler_angle +
ground_clearance + AWD, data = mpg_data)
summary(linear_model)
coil_data <- read.csv(file = 'Suspension_Coil.csv', check.names = F, stringsAsFactors = F)
View(coil_data)
View(coil_data)
total_summary <- coil_data %>% summarize(Mean = mean(PSI), Median = median(PSI),
Variance = var(PSI), SD = sd(PSI), .groups = 'keep')
View(total_summary)
View(total_summary)
grouped_summary <- coil_data %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),
Median=median(PSI), Variance=var(PSI),
SD=sd(PSI), .groups = 'keep')
View(grouped_summary)
# Create grouped Summary by Manufacturing Lot
grouped_summary <- coil_data %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI),
Median = median(PSI), Variance = var(PSI),
SD = sd(PSI), .groups = 'keep')
t.test(subset(coil_data$PSI, coil_data$Manufacturing_Lot == "Lot3"), mu = 1500)
# Compare PSI across population mean of 1500PSI
t.test(coil_data$PSI, mu = 1500)
View(coil_data)
View(linear_model)
View(grouped_summary)
View(total_summary)
View(grouped_summary)
# Compare PSI across each Manufacturing Lot, still using 1500PSI as population mean
t.test(subset(coil_data$PSI, coil_data$Manufacturing_Lot == "Lot1"), mu = 1500)
t.test(subset(coil_data$PSI, coil_data$Manufacturing_Lot == "Lot2"), mu = 1500)
t.test(subset(coil_data$PSI, coil_data$Manufacturing_Lot == "Lot3"), mu = 1500)
View(coil_data)
View(coil_data)
ggplot(coil_data, aes(Manufacturing_Lot, PSI))
ggplot(mpg_data, aes(vehicle_length, mps))
ggplot(mpg_data, aes(vehicle_length, mpg))
ggplot(mpg_data, aes(x=vehicle_length, y=mpg)) + geom_point()
View(mpg_data)
View(mpg_data)
ggplot(mpg_data, aes(x=ground_clearance, y=mpg)) + geom_point()
View(coil_data)
View(coil_data)
View(grouped_summary)
View(linear_model)
View(total_summary)
View(mpg_data)
View(coil_data)
View(mpg_data)
View(coil_data)
